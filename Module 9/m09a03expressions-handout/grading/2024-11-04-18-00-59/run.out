'Constant' directly implements/extends interface 'Expression'...
    -> true
Class 'Constant' has a public constructor with argument types (double)... 
    -> true
Class 'Constant' only has private fields...
    -> true
'Addition' directly implements/extends interface 'Expression'...
    -> true
Class 'Addition' has a public constructor with argument types (Expression, Expression)... 
    -> false (constructor not declared)
Class 'Addition' only has private fields...
    -> true
'Subtraction' directly implements/extends interface 'Expression'...
    -> true
Class 'Subtraction' has a public constructor with argument types (Expression, Expression)... 
    -> false (constructor not declared)
Class 'Subtraction' only has private fields...
    -> true
'Multiplication' directly implements/extends interface 'Expression'...
    -> true
Class 'Multiplication' has a public constructor with argument types (Expression, Expression)... 
    -> false (constructor not declared)
Class 'Multiplication' only has private fields...
    -> true
'Division' directly implements/extends interface 'Expression'...
    -> true
Class 'Division' has a public constructor with argument types (Expression, Expression)... 
    -> false (constructor not declared)
Class 'Division' only has private fields...
    -> true
